<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" applicationComplete="init();" backgroundColor="#FF6666">

    <fx:Script><![CDATA[
        import com.github.airext.DatePicker;
        import com.github.airext.enum.DatePickerMode;
        import com.github.airext.enum.DatePickerMode;
        import com.github.airext.events.DatePickerEvent;

        import spark.components.Alert;

        private var picker:DatePicker = DatePicker.sharedInstance();

        [Bindable]
        private var selectedDate:Date;

        private function open():void
        {
            if (DatePicker.isSupported())
            {
                picker.open();
            }
            else
            {
                Alert.show("DatePicker requires iOS 7.0 or greater.");
            }
        }

        private function init():void
        {
            DatePicker.sharedInstance().debug = true;

//            picker.minimum = new Date(2013, 1);
            picker.maximum = new Date(2015, 1);
            picker.date = new Date();

            picker.addEventListener(DatePickerEvent.SELECT,
                function (event:DatePickerEvent):void
                {
                    trace("SELECT", event.date);

                    selectedDate = event.date;
                });

            picker.addEventListener(Event.CANCEL,
                function (event:Event):void
                {
                    trace("CANCEL");
                });
        }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <s:RadioButtonGroup id="modeGroup" />
    </fx:Declarations>

    <s:layout>
        <s:VerticalLayout horizontalAlign="justify" gap="30" paddingTop="30" />
    </s:layout>

    <s:Button width="100%" label="Show" click="open();" />

    <s:ButtonBar width="100%" selectedIndex="2" change="picker.mode = event.target.selectedItem.mode">
        <s:dataProvider>
            <s:ArrayList>
                <fx:Array>
                    <fx:Object label="Date" mode="{DatePickerMode.DATE}" />
                    <fx:Object label="Time" mode="{DatePickerMode.TIME}" />
                    <fx:Object label="Both" mode="{DatePickerMode.DATE_AND_TIME}" />
                </fx:Array>
            </s:ArrayList>
        </s:dataProvider>
    </s:ButtonBar>

    <s:Label text="COLORS AND EFFECTS" />

    <s:SkinnableContainer backgroundColor="#FFFFFF">
        <s:layout><s:VerticalLayout paddingLeft="10" paddingTop="10" paddingBottom="10" /></s:layout>
        <s:CheckBox width="100%" label="Black Version"  change="" />
    </s:SkinnableContainer>

    <s:Label text="The black version only works oif blur effects are enabled. As blur effects require iOS 8 and later, the black version also requires iOS 8 and later" />

    <s:SkinnableContainer backgroundColor="#FFFFFF">
        <s:layout><s:VerticalLayout paddingLeft="10" paddingTop="10" paddingBottom="10" /></s:layout>
        <s:CheckBox width="100%" selected="true" label="Now Button" change="picker.appearance.ios.hideNowButton = !event.target.selected;" />
        <s:CheckBox width="100%" selected="true" label="Motion Effects" change="picker.appearance.ios.disableMotionEffects = !event.target.selected;" />
        <s:CheckBox width="100%" selected="true" label="Bouncing Effects" change="picker.appearance.ios.disableBouncingWhenShowing = !event.target.selected;" />
        <s:CheckBox width="100%" selected="true" label="Background Taps" change="picker.appearance.ios.backgroundTapsDisabled = !event.target.selected;" />
    </s:SkinnableContainer>

    <s:Label text="{selectedDate ? (picker.mode == DatePickerMode.TIME ? selectedDate.toTimeString() : selectedDate.toDateString()) : ''}" />

</s:Application>
